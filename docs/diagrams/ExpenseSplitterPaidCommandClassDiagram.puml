@startuml
/' @author @WillySeahh'/
/' Got inspiration and adapted
from https://github.com/AY1920S2-CS2103T-W12-1/main/blob/master/docs/images/DeliveredClassDiagram.png '/

skinparam backgroundColor #ffffff
skinparam classAttributeIconSize 0
hide circle

class PaidCommandParser implements Parser {
    /' Methods '/
    + parse(args : String) : PaidCommand
    - onlyReturnFlagPresent(splitInputList : List<String>) : boolean
    - onlyOrderFlagPresent(splitInputList : List<String>) : boolean
    - indexOfReturnList(splitInputList : List<String>) : Index
    - indexOfOrderList(splitInputList : List<String>) : Index
}

interface Parser<T extends Command> {
    parse(userInput : String) : PaidCommand
}

abstract class Command {
    {abstract} execute(SplitterModel splitterModel) : CommandResult
}

class PaidCommand extends Command {
    /' Fields '/
    - Index : indexOfPersonPaid
    - String : amountPaid

    /' Methods '/
    + execute(splitterModel : SplitterModel) : CommandResult
    + equals() : boolean
}

interface Model <<Interface>> {
    + getFilteredOrderList() : void
    + setOrder(order : Order, deliveredOrder : Order) : void
    + deliverOrder(deliveredOrder : Order) : void
    + getFilteredReturnOrderList() : void
    + setReturnOrder(returnOrder : ReturnOrder, deliveredReturnOrder : ReturnOrder) : void
    + deliverReturnOrder(deliveredReturnOrder : ReturnOrder) : void
    + updateFilteredOrderList(PREDICATE_SHOW_ALL_ORDERS :Predicate<Order>) : void
    + updateFilteredReturnOrderList(PREDICATE_SHOW_ALL_Returns :Predicate<ReturnOrder>) : void

}

class Index {
    + getZeroBased()
    + getOneBased()
}

class DeliveredParcelDescriptor {
    /' Fields '/
    - tid : TransactionId
    - name : Name
    - phone : Phone
    - email : Email
    - address : Address
    - timeStamp : TimeStamp
    - warehouse : Warehouse
    - cod : CashOnDelivery
    - comment : Comment
    - itemType : TypeOfItem
    - deliveryStatus : boolean
}

PaidCommand --* "1" DeliveredParcelDescriptor
PaidCommandParser ..> PaidCommand
PaidCommandParser ..> DeliveredParcelDescriptor
PaidCommand ..> Model
PaidCommandParser ..> Index
PaidCommand --> Index
@enduml