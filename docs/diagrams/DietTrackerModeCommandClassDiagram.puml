@startuml
/' @author @jarrod-bob'/
/' Got inspiration and adapted
from https://github.com/AY1920S2-CS2103T-W12-1/main/blob/master/docs/images/DeliveredClassDiagram.png '/

skinparam backgroundColor #ffffff
skinparam classAttributeIconSize 0
hide circle

class ModeCommandParser implements Parser {
    /' Methods '/
    + parse(args : String) : ModeCommand
    <u> - arePrefixesPresent(argumentMultimap : ArgumentMultimap, prefixes : Prefix...) : boolean
}

interface Parser<T extends Command> <<Interface>> {
    parse(userInput : String) : Command
}

abstract class Command {
    {abstract} execute(dietModel:DietModel) : CommandResult
}

class ModeCommand extends Command {
    /' Fields '/
    + COMMAND_WORD : String = "mode"
    + MESSAGE_USAGE : String
    + MESSAGE_ADD_MODE_SUCCESS : String = "Added Weight: %1$s"
    + MESSAGE_FLAG_NOT_PROVIDED : String = "Please provide a flag [-g]/[-m]/[-l]!";

    - mode : Mode

    /' Methods '/
    + execute(dietModel : DietModel) : CommandResult
    + equals(other : Object) : boolean

}

interface DietModel <<Interface>> {
    + PREDICATE_SHOW_ALL_FOODS : Predicate<Food>

    + setUserPrefs(userPrefs : ReadOnlyUserPrefs) : void
    + getUserPrefs() : ReadOnlyUserPrefs
    + getMyselfFilePath() : Path
    + setMyselfFilePath(myselfFilePath : Path) : void
    + setMyself(myself : ReadOnlyMyself) : void
    + getMyself() : ReadOnlyMyself
    + setHeight(height : Height) : void
    + setWeight(weight : Weight) : void
    + getHeight() : Height
    + getWeight() : Weight
    + setMode(mode : Mode) : void
    + printMetrics() : String
    + getMode() : Mode
    + getFoodBookFilePath() : Path
    + setFoodBookFilePath(foodBookFilePath : Path) : void
    + setFoodBook(foodBook : ReadOnlyFoodBook) : void
    + getFoodBook() : ReadOnlyFoodBook
    + hasFood(food : Food) : boolean
    + deleteFood(target : Food) : void
    + addFood(food : Food) : void
    + setFood(target : Food, editedFood : Food) : void
    + getFilteredFoodList() : ObservableList<Food>
    + listFoods(mode : String) : String
    + updateFilteredFoodList(predicate : Predicate<Food>) : void
}

enum Mode <<Enumeration>> {
    /' Fields '/
    LOSS
    GAIN
    MAINTAIN
}

class ParserUtil {
    <u> + parseIndex(oneBasedIndex : String) : Index
    <u> + parseCalories(calories : String) : Calories
    <u> + parseName(name : String) : Name
    <u> + parseTag(tag : String) : Tag
    <u> + parseTags(tags : Collection<Tag>) : Set<Tag>
    <u> + parseHeight(height : String) : Height
    <u> + parseWeight(weight : String) : Weight
    <u> + parseDays(days : String) : int
}

ModeCommand ..> DietModel
ModeCommandParser ..> ModeCommand
ModeCommandParser ..> Mode
ModeCommandParser ..> ParserUtil
ModeCommand --> Mode



@enduml
