@startuml
/' @author @WillySeahh'/
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":SplitterLogicManager" as SplitterLogicManager LOGIC_COLOR
participant ":ExpenseSplitterParser" as ExpenseSplitterParser LOGIC_COLOR
participant ":PaidCommandParser" as PaidCommandParser LOGIC_COLOR
participant ":PaidCommand" as PaidCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":SplitterModelManager" as SplitterModelManager MODEL_COLOR
'participant ":PersonAmountBook" as PersonAmountBook MODEL_COLOR
'participant ":UniquePersonList" as UniquePersonList MODEL_COLOR
'participant ":Person" as Person MODEL_COLOR
end box

box Storage STORAGE_COLOR_T1
participant ":SplitterStorage" as SplitterStorageManager STORAGE_COLOR
end box

[-> SplitterLogicManager : execute("paid 1 3.90")
activate SplitterLogicManager

SplitterLogicManager -> ExpenseSplitterParser : parseCommand("paid 1 3.90")
activate ExpenseSplitterParser

create PaidCommandParser
ExpenseSplitterParser -> PaidCommandParser
activate PaidCommandParser

PaidCommandParser --> ExpenseSplitterParser
deactivate PaidCommandParser

ExpenseSplitterParser -> PaidCommandParser : parse("paid 1 3.90")
activate PaidCommandParser

create PaidCommand
PaidCommandParser -> PaidCommand
activate PaidCommand

PaidCommand --> PaidCommandParser:d
deactivate PaidCommand

PaidCommandParser --> ExpenseSplitterParser :d
deactivate PaidCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
PaidCommandParser -[hidden]-> ExpenseSplitterParser
destroy PaidCommandParser

ExpenseSplitterParser --> SplitterLogicManager :d
deactivate ExpenseSplitterParser

alt receiptIsNotDone

    SplitterLogicManager -> PaidCommand :execute(model)
    activate PaidCommand

    PaidCommand -> CommandResult
    activate CommandResult

    CommandResult --> PaidCommand :result()
    deactivate CommandResult

    PaidCommand --> SplitterLogicManager : result()
    deactivate PaidCommand

else receiptIsDone

    ref over SplitterLogicManager, SplitterModelManager: Execution of PaidCommand
end
SplitterLogicManager -> SplitterStorageManager : savePersonAmountBook(personAmountBook)
activate SplitterStorageManager

SplitterStorageManager --> SplitterLogicManager

SplitterLogicManager -> SplitterStorageManager : saveReceiptBook(receiptBook)
SplitterStorageManager --> SplitterLogicManager

deactivate SplitterStorageManager


[<--SplitterLogicManager : result()
deactivate SplitterStorageManager


@enduml
