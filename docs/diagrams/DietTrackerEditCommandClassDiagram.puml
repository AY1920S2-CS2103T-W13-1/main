@startuml
/' @author @akhilvuputuri'/
/' Got inspiration and adapted
from https://github.com/AY1920S2-CS2103T-W12-1/main/blob/master/docs/images/DeliveredClassDiagram.png '/

skinparam backgroundColor #ffffff
skinparam classAttributeIconSize 0
hide circle


class EditCommandParser implements Parser {
    /' Methods '/
    + parse(args : String) : EditCommand
}

interface Parser<T extends Command> {
    parse(userInput : String) : EditCommand
}

abstract class Command<E> {
    {abstract} execute(model : E) : CommandResult
}

class EditCommand extends Command {
    /' Fields '/
    - editFoodDescriptor : EditFoodDescriptor
    - index : Index

    /' Methods '/
    + execute(dietModel : DietModel) : CommandResult

}

interface DietModel <<Interface>> {
    + hasFood(food : Food) : boolean
    + setFood(food : Food, editedFood : Food) : void
    + getFilteredFoodList() : ObservableList<Food>
    + updateFilteredFoodList(predicate : Predicate<Food>) : void
}

class Index {
    + getZeroBased()
    + getOneBased()
}


EditCommandParser ..> EditCommand
EditCommand ..> DietModel
EditCommandParser ..> Index
EditCommand *--> "1" Index

@enduml
